version: "3"
services:
  mysql:
    image: mysql:8.0-bookworm
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - db-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "mysql",
          "-pmysql",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  adminer:
    image: adminer:4.8.0
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - db-network

  postgresql:
    image: postgres:16
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - db-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:5.0.29-focal
    restart: always
    volumes:
      - mongodb_data:/data/db
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - db-network
    healthcheck:
      test: ["CMD-SHELL", "mongo --eval 'db.stats()'"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo-express:
    depends_on:
      - mongodb
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${ME_CONFIG_MONGODB_ADMINUSERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${ME_CONFIG_MONGODB_ADMINPASSWORD}
      - ME_CONFIG_MONGODB_SERVER=${ME_CONFIG_MONGODB_SERVER}
    networks:
      - db-network

  redis:
    image: redis:alpine3.20
    restart: always
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - db-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - 8082:8081
    environment:
      - REDIS_HOSTS=${REDIS_HOSTS}
    networks:
      - db-network

  chromadb:
    image: chromadb/chroma:0.6.4.dev419
    container_name: chroma-db
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/.chroma
    environment:
      - IS_PERSISTENT=${IS_PERSISTENT}
      - CHROMA_DB_DIR=${CHROMA_DB_DIR}
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3

  dense-index:
    image: ghcr.io/pinecone-io/pinecone-index:latest
    container_name: dense-index
    environment:
      PORT: 5081
      INDEX_TYPE: serverless
      VECTOR_TYPE: dense
      DIMENSION: 2
      METRIC: cosine
    ports:
      - "5081:5081"
    platform: linux/amd64
    volumes:
      - dense_index_data:/data
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5081"]
      interval: 30s
      timeout: 10s
      retries: 3

  sparse-index:
    image: ghcr.io/pinecone-io/pinecone-index:latest
    container_name: sparse-index
    environment:
      PORT: 5082
      INDEX_TYPE: serverless
      VECTOR_TYPE: sparse
      DIMENSION: 0
      METRIC: dotproduct
    ports:
      - "5082:5082"
    platform: linux/amd64
    volumes:
      - sparse_index_data:/data
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5082"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  postgresql_data:
  mongodb_data:
  redis_data:
  chroma_data:
  dense_index_data:
  sparse_index_data:

networks:
  db-network:
    driver: bridge
