version: "3"
services:
  postgresql:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - db-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "2GB"
        reservations:
          cpus: "1"
          memory: "1GB"

  postgresql-backup:
    image: postgres:16
    container_name: postgresql-backup
    restart: unless-stopped
    volumes:
      - ./backups/postgresql:/backups
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    command: >
      sh -c "while true; do
        pg_dump -h postgresql -U ${POSTGRES_USER} -F c -b -v -f /backups/postgresql-$(date +%F).dump;
        find /backups -type f -name '*.dump' -mtime +14 -exec rm {} \;
        sleep 86400;
      done"
    depends_on:
      - postgresql
    networks:
      - db-network

  adminer:
    image: adminer:4.8.0
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - db-network

networks:
  db-network:
    driver: bridge
