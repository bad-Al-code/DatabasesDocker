version: "3.8"

services:
  redis:
    image: redis:alpine3.20
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command:
      [
        "redis-server",
        "--appendonly",
        "yes",
        "--requirepass",
        "${REDIS_PASSWORD}",
      ]
    networks:
      - db-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: "1GB"
        reservations:
          cpus: "1"
          memory: "512MB"

  redis-backup:
    image: alpine:latest
    container_name: redis-backup
    restart: unless-stopped
    volumes:
      - redis_backup:/backups
    command: >
      sh -c "while true; do
        cp /data/dump.rdb /backups/redis-$(date +%F).rdb;
        find /backups -type f -name '*.rdb' -mtime +14 -exec rm {} \;
        sleep 86400;
      done"
    depends_on:
      - redis
    networks:
      - db-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: unless-stopped
    ports:
      - "${REDIS_COMMANDER_PORT}:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - db-network

networks:
  db-network:
    driver: bridge

volumes:
  redis_data:
    name: redis_data
  redis_backup:
    name: redis_backup
